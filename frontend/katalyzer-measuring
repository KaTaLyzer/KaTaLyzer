#! /usr/bin/php5
<?php
define( "TIME", time() );

if(in_array('--cron',$argv)){
	if($obj_arr = connect('--cron')){
		foreach($obj_arr as $tablename => $name){
			$name->write($tablename);
		}
	}
}elseif(in_array('--list',$argv)){
	if($obj_arr = connect('--list')){ 
		foreach($obj_arr as $table_name => $table_object){
			$table_object->print_list($table_name);
		}
	}
}elseif(in_array('--create',$argv)){
	if($obj_arr = connect('--create')){
		foreach($obj_arr as $table_name => $table_object){
			$table_object->create_tables($table_name);
		}
	}
}elseif(in_array('--delete',$argv)){

}else{
	help();
}

function connect($argument){
	// find config file
	global $argv;
	$id = array_search($argument,$argv);	// search '--cron' key in $argv array
	$id++;
	while( isset($argv[$id]) && strncmp($argv[$id],'-',1)==false ){ $id++; }	// skip options
	if( isset($argv[$id]) ){
		if( is_file($argv[$id]) == true ){	// test for bad filepath
			$configfile = file($argv[$id],FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
		}else{
			echo "Config file not found!\n";
			return false;
		}
	}else{
		echo "Config file not specified!\n";
		return false;
	}
	foreach($configfile as $line){
		$line = trim($line);
			$pieces = explode("=", $line);
			$option = strtolower(trim($pieces[0]));
			$value = trim($pieces[1]);
			if($option == 'db_host'){ $host = $value;}
			if($option == 'db_user'){ $user = $value;}
			if($option == 'db_pass'){ $pass = $value;}
			if($option == 'db_name'){ $database = $value;}
	}
	if( !isset($host)	) echo "db_host not specified!\n";
	if( !isset($user)	) echo "db_user not specified!\n";
	if( !isset($pass)	) echo "db_pass not specified!\n";
	if( !isset($database)	) echo "db_name not specified!\n";

	if(isset($host) && isset($user) && isset($pass) && isset($database)){
		mysql_connect($host,$user,$pass);
		@mysql_select_db($database) or die( "Unable to select database\n");
	}

	$obj_arr = Array();
	foreach($configfile as $line){
		$line = trim($line);
		if ($line && !ereg("^#", $line)) {
			$pieces = explode("=", $line);
			$option = trim($pieces[0]);
			$value = trim($pieces[1]);

			$pieces = explode("->", $option);
			$name = trim($pieces[0]);
			if(isset($pieces[1])){
				$option = trim($pieces[1]);
				if(!isset($obj_arr[$name])){
					$obj_arr[$name] = new db();
				}
				if($option=='options'){
					$obj_arr[$name]->options($value);
				}elseif($option=='legend'){
					$obj_arr[$name]->legend($value);
				}elseif($option=='target'){
					$obj_arr[$name]->target($value);
				}
			}
		}
	}

	return $obj_arr;

}

class db {
	private $sum = false;
	private $avg = false;
	private $growing = false;
	private $legend = Array();
	private $data = Array();

	function db(){
	}

	function options($data){
		$pieces = explode(",", $data);
		foreach($pieces as $option){
			if($option == "sum"){
				$this->sum = true;
			}elseif($option == "avg"){
				$this->avg = true;
			}elseif($option == "growing"){
				$this->growing = true;
			}
		}
	}
	function legend($data){
		$pieces = explode(",", $data);
		foreach($pieces as $key => $value){
			if(trim($value) != '')
				$this->legend[$key] = trim($value);
		}
	}
	function target($data){
		$out = '';
		$cmd_array = explode("`",$data);
		foreach($cmd_array as $id => $cmd){
			if($id%2==1){
				exec($cmd,$output);
				foreach($output as $key => $val){
					$out .= $val;
					if(isset($output[$key+1]))
						$out.="\n";
				}
			}else{
				$out .= $cmd;
			}
		}
		$line_arr = explode("\n",$out);
		foreach($line_arr as $line){
			$this->data[] = explode(" ",$line);
		}
	}
	function write($tablename){
		$insert = ''; $inserted_id = 0;
		if(!isset($this->legend[1])){ echo "Config file error: ".$tablename."->legend - no data \n"; return false;}

		if(is_file('/tmp/katalyzer_'.$tablename) == true){
			$olddata = unserialize(file_get_contents('/tmp/katalyzer_'.$tablename));
			foreach($this->data as $row => $record){
				if(count($record) == count($this->legend)){
					$insert .= "INSERT INTO ".$tablename."_1m (";
					foreach($this->legend as $id => $name){
						$insert .= $name;
						if(isset($this->legend[$id+1])) $insert .= ",";
					}
					$insert .= ") VALUES (";
					$sum = 0;
					foreach($record as $id => $value){
						if($id!=0 && $this->growing){
							$value = $value-$olddata[$row][$id];
							if($value<0)
								$value = 0;
							$insert .= "'$value'";
						}else $insert .= "'$value'";
						if($id!=0)
							$sum += $value;
						if(isset($this->legend[$id+1])) $insert .= ",";
					}
					$insert .= ")";
					if($sum > 0){
						mysql_query($insert);
						if($inserted_id == 0)
							$inserted_id = mysql_insert_id();
					}
					$insert = '';
				}else{ echo "length of ".$tablename."->legend != ".$tablename."->target\n"; }
			}
		}
		file_put_contents('/tmp/katalyzer_'.$tablename, serialize($this->data));

		if($inserted_id > 0){
			$query = "INSERT INTO ".$tablename."_1m_time (time, id) VALUES ('".TIME."', '$inserted_id')";
			mysql_query($query);
		}

		// build other intervals
		// 5min

		foreach(Array(300=>"5m",1800=>"30m",7200=>"2h",86400=>"1d") as $interval => $int_name){
			$res = mysql_query("SELECT MAX(time) as time FROM ".$tablename."_".$int_name."_time");
			$obj = mysql_fetch_object($res);
			if( round($obj->time/$interval) != round(TIME/$interval-1) ){
				$time = round(TIME/$interval-1) * $interval;
				$begin = $time - $interval;
				$end = $time - 1;
				$begin_id = 0;
				$end_id = 0;
				$res_time = mysql_query("SELECT id FROM ".$tablename."_1m_time WHERE time >= $begin AND time <= $end");
				while($obj_time = mysql_fetch_object($res_time)){
					if($begin_id == 0) $begin_id = $obj_time->id;
					$end_id = $obj_time->id;
				}
				if($end_id != 0){
					$obj_time = mysql_fetch_object(mysql_query("SELECT id FROM ".$tablename."_1m_time WHERE id > $end_id"));
					$end_id = $obj_time->id - 1; 

				}
				if($begin_id != 0 || $end_id != 0){
					$res = mysql_query("SELECT * FROM ".$tablename."_1m WHERE id >= $begin_id AND id <= $end_id");
					while($data = mysql_fetch_array($res)){
						
						foreach( $this->legend as $legend_name){
							if($legend_name != $this->legend[0]){
								if(!isset($write[$data[ $this->legend[0] ]][$legend_name])){
									$write[$data[ $this->legend[0] ]][$legend_name] = $data[$legend_name];
								}else
									$write[$data[ $this->legend[0] ]][$legend_name] += $data[$legend_name];
							}
						}
					}
					foreach($write as $string => $val_array){
						$insert = "INSERT INTO ".$tablename."_".$int_name." (";
						foreach($this->legend as $legend_id => $legend_name){
							$insert .= $legend_name;
							if(isset($this->legend[$legend_id+1])) $insert .= ",";
						}
						$insert .= ") VALUES ( '$string', ";
						foreach($this->legend as $legend_id => $legend_name){
							if( $this->legend[0] != $legend_name){
								$insert .= "'".$val_array[$legend_name]."'";
								if( isset($this->legend[$legend_id+1]) ) $insert .= ",";
							}
						}
						$insert .= ")";
						mysql_query($insert);
						$insert = '';
						if($inserted_time_id == 0)
							$inserted_time_id = mysql_insert_id();
					
					}
					if($inserted_time_id > 0){
						$query = "INSERT INTO ".$tablename."_".$int_name."_time (time, id) VALUES ('".$end."', '$inserted_time_id')";
						mysql_query($query);
					}

					$inserted_time_id = 0;


					unset($write);
				}
			}
		}

	}

	function print_list($tablename){
		foreach($this->legend as $legend){
			echo " $tablename => $legend\n";
		}
	}
	function create_tables($tablename){
		if(!isset($this->legend[1])){ echo "Config file error: ".$tablename."->legend - no data \n"; return false;}
		$insert_error=false;
		$suffix_array = Array('_1m','_5m','_30m','_2h','_1d');
		foreach($suffix_array as $suffix){
			$query = "CREATE TABLE IF NOT EXISTS `".$tablename.$suffix."` (\n";
			$query .= "   `id` int(11) unsigned NOT NULL auto_increment,\n";
			foreach($this->legend as $id => $column){
				if($id == 0)
					$query .= "   `".$column."` varchar(10) NOT NULL,\n";
				else
					$query .= "   `".$column."` float NOT NULL,\n";
			}
			$query .= "PRIMARY KEY	(`id`)\n";
			$query .= ") ENGINE=MyISAM  DEFAULT CHARSET=latin1;\n";
		
			$query_time = "CREATE TABLE IF NOT EXISTS `".$tablename.$suffix."_time` (\n";
			$query_time .= "   `time` int(11) NOT NULL,\n";
			$query_time .= "   `id` int(11) NOT NULL,\n";
			$query_time .= "   PRIMARY KEY	(`time`)\n";
			$query_time .= "   ) ENGINE=MyISAM DEFAULT CHARSET=latin1;\n";
			if(!mysql_query($query)) $insert_error==true;
			if(!mysql_query($query_time)) $insert_error=true;
		}
		echo "$tablename"; if($insert_error) echo " ERROR\n"; else echo " CREATED\n";
	}

}
function help(){
	echo "Usage:   import [options] <configfile>\n";
	echo "Basic options:\n";
	echo " --help		       display this message\n";
	echo " --cron		       write data\n";
	echo " --list		       display list of measured data\n";
	echo " --create		       create MySQL tables\n";
	echo " --delete [name]	       delete MySQL table\n";
}

?>
